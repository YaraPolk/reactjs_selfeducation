# Файл docker-compose должен начинаться с указания версии.
version: '3.8'

# Сети
networks:
  internal:

services:
  nginx:
    # Какую версию образа nginx из официального хранилища DockerHub используем
    image: nginx:stable-alpine
    container_name: nginx-react
    # Ниже прокидываем порты. NGINX в контейнере работает на дефолтном 80, а мы возьмем 8000
    ports:
      - "80:80"
    links:
      - mysql
    # Монтируем директории, слева директории на основной системе, справа - куда они монтируются в контейнере
    volumes:
      - ./backend:/var/www
      - ./config/nginx:/etc/nginx/conf.d
      - ./data/logs:/var/log/nginx/
    networks:
      - internal
  php:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - mysql
    build:
      context: ./config/php
      dockerfile: Dockerfile
    container_name: php-react
    volumes:
      - ./backend:/var/www
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "9001:9000"
    networks:
      - internal
  mysql:
    image: mysql:5.7
    container_name: mysql-react
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3321:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    # Задаем пароль для root пользователя
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: react
      MYSQL_USER: react
      MYSQL_PASSWORD: react
    networks:
      - internal